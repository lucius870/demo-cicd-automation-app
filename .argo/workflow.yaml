apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: spring-boot-app-build-
  annotations:
    workflows.argoproj.io/description: |
      Build and push a container image using BuildKit.
    workflows.argoproj.io/maintainer: '@your_username'
    workflows.argoproj.io/tags: build, spring-boot
spec:
  volumeClaimTemplates:
  - metadata:
      name: repo-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  volumes:
    - name: dockerconfig
      secret:
        secretName: config.json
    - name: git-credentials
      secret:
        secretName: git-credentials-secret
  entrypoint: dag-target
  templates:
  - name: dag-target
    steps:
    - - name: git-clone
        template: git-clone
    - - name: gradle-build
        template: gradle-build
      - name: gradle-test
        template: gradle-test
    - - name: docker-build
        template: docker-build
    - - name: update-helm-version
        template: update-helm-version

  - name: git-clone
    container:
      image: alpine/git
      command: ["git", "clone", "https://github.com/majoferenc/demo-cicd-automation-app.git", "/workspace"]
      volumeMounts:
      - name: repo-volume
        mountPath: /workspace
  - name: gradle-test
    container:
      image: gradle:jdk17
      command: ["gradle", "test", "-i", "--parallel"]
      workingDir: /workspace
      volumeMounts:
        - name: repo-volume
          mountPath: /workspace
  - name: gradle-build
    container:
      image: gradle:jdk17
      command: ["gradle", "bootJar", "-i", "--parallel"]
      workingDir: /workspace
      volumeMounts:
      - name: repo-volume
        mountPath: /workspace
  - name: docker-build
    container:
      image: moby/buildkit:v0.13.0-rootless
      volumeMounts:
      - name: dockerconfig
        mountPath: /.docker
      - name: repo-volume
        mountPath: /workspace
      env:
        - name: BUILDKITD_FLAGS
          value: --oci-worker-no-process-sandbox
        - name: DOCKER_CONFIG
          value: /.docker
      command: ["buildctl-daemonless.sh"]
      args: ["build", "--frontend", "dockerfile.v0", "--local", "context=.", "--local", "dockerfile=.", "--output", "type=image,name=docker.io/marianferenc/argo-demo-app:latest,push=true"]
      workingDir: /workspace
  - name: update-helm-version
    container:
      image: alpine/git
      command: ["/bin/sh", "-c"]
      args:
        - |
          set -x
          # Set up .git-credentials environment variable
          export GIT_CREDENTIALS=/tmp/.git-credentials
  
          # Clone the repository using the credentials
          git clone --config credential.helper='store --file=/tmp/.git-credentials' https://github.com/majoferenc/demo-cicd-automation-app.git
          
          cd demo-cicd-automation-app
          
          # Fetch the Git hash value
          GIT_HASH=$(git rev-parse --short HEAD)

          # Update the values.yaml file with the Git hash
          sed -i "s/image.tag:.*/image.tag: $GIT_HASH/" chart/values.yaml

          # Commit the changes
          git config --global user.email "workflow@argo.io"
          git config --global user.name "Argo Workflow"
          git add chart/values.yaml
          git commit -m "Update image tag to Git hash: $GIT_HASH"

          # Push the changes to the Git repository
          git push origin main
      volumeMounts:
      - name: git-credentials
        mountPath: /root/.git-credentials
        subPath: .git-credentials
      env:
      - name: GIT_ASKPASS
        value: /bin/true
      - name: GIT_TERMINAL_PROMPT
        value: '0'