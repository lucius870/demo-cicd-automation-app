---
# Source: argo/charts/argo-events/templates/argo-events-controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: argo-argo-events-controller-manager
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-events-2.4.3
    app.kubernetes.io/name: argo-events-controller-manager
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-events
---
# Source: argo/charts/argo-events/templates/argo-events-webhook/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: argo-argo-events-events-webhook
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-events-2.4.3
    app.kubernetes.io/name: argo-events-events-webhook
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: events-webhook
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-events
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-controller-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-argo-workflows-workflow-controller
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
---
# Source: argo/charts/argo-workflows/templates/server/server-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
---
# Source: argo/charts/argo-events/templates/argo-events-controller/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: argo-argo-events-controller-manager
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-events-2.4.3
    app.kubernetes.io/name: argo-events-controller-manager
    app.kubernetes.io/instance: argo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-events
data:
  controller-config.yaml: |
    eventBus:
      nats:
        versions:
        - version: latest
          natsStreamingImage: nats-streaming:latest
          metricsExporterImage: natsio/prometheus-nats-exporter:latest
        - version: 0.22.1
          natsStreamingImage: nats-streaming:0.22.1
          metricsExporterImage: natsio/prometheus-nats-exporter:0.8.0
      jetstream:
        # Default JetStream settings, could be overridden by EventBus JetStream specs
        settings: |
          # https://docs.nats.io/running-a-nats-service/configuration#jetstream
          # Only configure "max_memory_store" or "max_file_store", do not set "store_dir" as it has been hardcoded.
          max_memory_store: -1
          max_file_store: -1
        # The default properties of the streams to be created in this JetStream service
        streamConfig: |
          maxMsgs: 1e+06
          maxAge: 72h
          maxBytes: 1GB
          replicas: 3
          duplicates: 300s
        versions:
        - version: latest
          natsImage: nats:latest
          metricsExporterImage: natsio/prometheus-nats-exporter:latest
          configReloaderImage: natsio/nats-server-config-reloader:latest
          startCommand: /nats-server
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-controller-config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: argo-argo-workflows-workflow-controller-configmap
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-cm
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
data:
  config: |
    nodeEvents:
      enabled: true
---
# Source: argo/charts/argo-events/templates/crds/eventbus-crd.yml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: eventbus.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: EventBus
    listKind: EventBusList
    plural: eventbus
    shortNames:
    - eb
    singular: eventbus
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: argo/charts/argo-events/templates/crds/eventsource-crd.yml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: eventsources.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: EventSource
    listKind: EventSourceList
    plural: eventsources
    shortNames:
    - es
    singular: eventsource
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: argo/charts/argo-events/templates/crds/sensor-crd.yml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sensors.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: Sensor
    listKind: SensorList
    plural: sensors
    shortNames:
    - sn
    singular: sensor
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: argo/charts/argo-workflows/templates/crds/argoproj.io_clusterworkflowtemplates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterworkflowtemplates.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: ClusterWorkflowTemplate
    listKind: ClusterWorkflowTemplateList
    plural: clusterworkflowtemplates
    shortNames:
    - clusterwftmpl
    - cwft
    singular: clusterworkflowtemplate
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
# Source: argo/charts/argo-workflows/templates/crds/argoproj.io_cronworkflows.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cronworkflows.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: CronWorkflow
    listKind: CronWorkflowList
    plural: cronworkflows
    shortNames:
    - cwf
    - cronwf
    singular: cronworkflow
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
# Source: argo/charts/argo-workflows/templates/crds/argoproj.io_workflowartifactgctasks.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowartifactgctasks.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowArtifactGCTask
    listKind: WorkflowArtifactGCTaskList
    plural: workflowartifactgctasks
    shortNames:
      - wfat
    singular: workflowartifactgctask
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              type: object
              x-kubernetes-map-type: atomic
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-map-type: atomic
              x-kubernetes-preserve-unknown-fields: true
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: argo/charts/argo-workflows/templates/crds/argoproj.io_workfloweventbindings.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workfloweventbindings.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowEventBinding
    listKind: WorkflowEventBindingList
    plural: workfloweventbindings
    shortNames:
    - wfeb
    singular: workfloweventbinding
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
# Source: argo/charts/argo-workflows/templates/crds/argoproj.io_workflows.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflows.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    shortNames:
    - wf
    singular: workflow
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the workflow
      jsonPath: .status.phase
      name: Status
      type: string
    - description: When the workflow was started
      format: date-time
      jsonPath: .status.startedAt
      name: Age
      type: date
    - description: Human readable message indicating details about why the workflow
        is in this condition.
      jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: argo/charts/argo-workflows/templates/crds/argoproj.io_workflowtaskresults.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowtaskresults.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowTaskResult
    listKind: WorkflowTaskResultList
    plural: workflowtaskresults
    singular: workflowtaskresult
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          message:
            type: string
          metadata:
            type: object
          outputs:
            properties:
              artifacts:
                items:
                  properties:
                    archive:
                      properties:
                        none:
                          type: object
                        tar:
                          properties:
                            compressionLevel:
                              format: int32
                              type: integer
                          type: object
                        zip:
                          type: object
                      type: object
                    archiveLogs:
                      type: boolean
                    artifactGC:
                      properties:
                        podMetadata:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        serviceAccountName:
                          type: string
                        strategy:
                          enum:
                          - ""
                          - OnWorkflowCompletion
                          - OnWorkflowDeletion
                          - Never
                          type: string
                      type: object
                    artifactory:
                      properties:
                        passwordSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        url:
                          type: string
                        usernameSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - url
                      type: object
                    azure:
                      properties:
                        accountKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        blob:
                          type: string
                        container:
                          type: string
                        endpoint:
                          type: string
                        useSDKCreds:
                          type: boolean
                      required:
                      - blob
                      - container
                      - endpoint
                      type: object
                    deleted:
                      type: boolean
                    from:
                      type: string
                    fromExpression:
                      type: string
                    gcs:
                      properties:
                        bucket:
                          type: string
                        key:
                          type: string
                        serviceAccountKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - key
                      type: object
                    git:
                      properties:
                        branch:
                          type: string
                        depth:
                          format: int64
                          type: integer
                        disableSubmodules:
                          type: boolean
                        fetch:
                          items:
                            type: string
                          type: array
                        insecureIgnoreHostKey:
                          type: boolean
                        passwordSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        repo:
                          type: string
                        revision:
                          type: string
                        singleBranch:
                          type: boolean
                        sshPrivateKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        usernameSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - repo
                      type: object
                    globalName:
                      type: string
                    hdfs:
                      properties:
                        addresses:
                          items:
                            type: string
                          type: array
                        force:
                          type: boolean
                        hdfsUser:
                          type: string
                        krbCCacheSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        krbConfigConfigMap:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        krbKeytabSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        krbRealm:
                          type: string
                        krbServicePrincipalName:
                          type: string
                        krbUsername:
                          type: string
                        path:
                          type: string
                      required:
                      - path
                      type: object
                    http:
                      properties:
                        auth:
                          properties:
                            basicAuth:
                              properties:
                                passwordSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                usernameSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            clientCert:
                              properties:
                                clientCertSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                clientKeySecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            oauth2:
                              properties:
                                clientIDSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                clientSecretSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                endpointParams:
                                  items:
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - key
                                    type: object
                                  type: array
                                scopes:
                                  items:
                                    type: string
                                  type: array
                                tokenURLSecret:
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                        headers:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        url:
                          type: string
                      required:
                      - url
                      type: object
                    mode:
                      format: int32
                      type: integer
                    name:
                      type: string
                    optional:
                      type: boolean
                    oss:
                      properties:
                        accessKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        bucket:
                          type: string
                        createBucketIfNotPresent:
                          type: boolean
                        endpoint:
                          type: string
                        key:
                          type: string
                        lifecycleRule:
                          properties:
                            markDeletionAfterDays:
                              format: int32
                              type: integer
                            markInfrequentAccessAfterDays:
                              format: int32
                              type: integer
                          type: object
                        secretKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        securityToken:
                          type: string
                        useSDKCreds:
                          type: boolean
                      required:
                      - key
                      type: object
                    path:
                      type: string
                    raw:
                      properties:
                        data:
                          type: string
                      required:
                      - data
                      type: object
                    recurseMode:
                      type: boolean
                    s3:
                      properties:
                        accessKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        bucket:
                          type: string
                        caSecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        createBucketIfNotPresent:
                          properties:
                            objectLocking:
                              type: boolean
                          type: object
                        encryptionOptions:
                          properties:
                            enableEncryption:
                              type: boolean
                            kmsEncryptionContext:
                              type: string
                            kmsKeyId:
                              type: string
                            serverSideCustomerKeySecret:
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                optional:
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        endpoint:
                          type: string
                        insecure:
                          type: boolean
                        key:
                          type: string
                        region:
                          type: string
                        roleARN:
                          type: string
                        secretKeySecret:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        useSDKCreds:
                          type: boolean
                      type: object
                    subPath:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              exitCode:
                type: string
              parameters:
                items:
                  properties:
                    default:
                      type: string
                    description:
                      type: string
                    enum:
                      items:
                        type: string
                      type: array
                    globalName:
                      type: string
                    name:
                      type: string
                    value:
                      type: string
                    valueFrom:
                      properties:
                        configMapKeyRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - key
                          type: object
                        default:
                          type: string
                        event:
                          type: string
                        expression:
                          type: string
                        jqFilter:
                          type: string
                        jsonPath:
                          type: string
                        parameter:
                          type: string
                        path:
                          type: string
                        supplied:
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              result:
                type: string
            type: object
          phase:
            type: string
          progress:
            type: string
        required:
        - metadata
        type: object
    served: true
    storage: true
---
# Source: argo/charts/argo-workflows/templates/crds/argoproj.io_workflowtasksets.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowtasksets.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowTaskSet
    listKind: WorkflowTaskSetList
    plural: workflowtasksets
    shortNames:
    - wfts
    singular: workflowtaskset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: argo/charts/argo-workflows/templates/crds/argoproj.io_workflowtemplates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflowtemplates.argoproj.io
  annotations:
    "helm.sh/resource-policy": keep
spec:
  group: argoproj.io
  names:
    kind: WorkflowTemplate
    listKind: WorkflowTemplateList
    plural: workflowtemplates
    shortNames:
    - wftmpl
    singular: workflowtemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-map-type: atomic
            x-kubernetes-preserve-unknown-fields: true
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
---
# Source: argo/charts/argo-events/templates/argo-events-controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-argo-events-controller-manager
  labels:
    helm.sh/chart: argo-events-2.4.3
    app.kubernetes.io/name: argo-events-controller-manager
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-events
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - sensors
  - sensors/finalizers
  - sensors/status
  - eventsources
  - eventsources/finalizers
  - eventsources/status
  - eventbus
  - eventbus/finalizers
  - eventbus/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - configmaps
  - services
  - persistentvolumeclaims
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-argo-workflows-view
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowtaskresults
  - workflowtaskresults/finalizers
  - workflowartifactgctasks
  - workflowartifactgctasks/finalizers
  verbs:
  - get
  - list
  - watch
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-argo-workflows-edit
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowtaskresults
  - workflowtaskresults/finalizers
  - workflowartifactgctasks
  - workflowartifactgctasks/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-argo-workflows-admin
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workfloweventbindings
  - workfloweventbindings/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowtaskresults
  - workflowtaskresults/finalizers
  - workflowartifactgctasks
  - workflowartifactgctasks/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-controller-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-argo-workflows-workflow-controller
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/finalizers
  verbs:
  - create
  - update
  - delete
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtasksets
  - workflowtasksets/finalizers
  - workflowartifactgctasks
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
  - create
- apiGroups:
  - argoproj.io
  resources:
  - workflowtemplates
  - workflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - workflowtaskresults
  - workflowtaskresults/finalizers
  verbs:
  - list
  - watch
  - deletecollection
- apiGroups:
  - argoproj.io
  resources:
  - cronworkflows
  - cronworkflows/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
- apiGroups:
  - "policy"
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - workflow-controller
  - workflow-controller-lease
  verbs:
  - get
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  resourceNames:
  
  - argo-workflows-agent-ca-certificates
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-controller-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-argo-workflows-workflow-controller-cluster-template
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
---
# Source: argo/charts/argo-workflows/templates/server/server-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-argo-workflows-server
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - watch
  - create
  - patch
- apiGroups:
    - argoproj.io
  resources:
    - eventsources
    - sensors
    - workflows
    - workfloweventbindings
    - workflowtemplates
    - cronworkflows
  verbs:
    - create
    - get
    - list
    - watch
    - update
    - patch
    - delete
---
# Source: argo/charts/argo-workflows/templates/server/server-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-argo-workflows-server-cluster-template
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: argo/charts/argo-events/templates/argo-events-controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-argo-events-controller-manager
  labels:
    helm.sh/chart: argo-events-2.4.3
    app.kubernetes.io/name: argo-events-controller-manager
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-events
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-argo-events-controller-manager
subjects:
- kind: ServiceAccount
  name: argo-argo-events-controller-manager
  namespace: "workflows"
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-controller-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-argo-workflows-workflow-controller
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-argo-workflows-workflow-controller
subjects:
  - kind: ServiceAccount
    name: argo-argo-workflows-workflow-controller
    namespace: "workflows"
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-controller-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-argo-workflows-workflow-controller-cluster-template
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-argo-workflows-workflow-controller-cluster-template
subjects:
  - kind: ServiceAccount
    name: argo-argo-workflows-workflow-controller
    namespace: "workflows"
---
# Source: argo/charts/argo-workflows/templates/server/server-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-argo-workflows-server
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-argo-workflows-server
subjects:
- kind: ServiceAccount
  name: argo
  namespace: "workflows"
---
# Source: argo/charts/argo-workflows/templates/server/server-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-argo-workflows-server-cluster-template
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-argo-workflows-server-cluster-template
subjects:
- kind: ServiceAccount
  name: argo
  namespace: "workflows"
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-argo-workflows-workflow
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtaskresults
    verbs:
      - create
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets
      - workflowartifactgctasks
    verbs:
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets/status
      - workflowartifactgctasks/status
    verbs:
      - patch
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-argo-workflows-workflow
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
  namespace: workflows
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtaskresults
    verbs:
      - create
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets
      - workflowartifactgctasks
    verbs:
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets/status
      - workflowartifactgctasks/status
    verbs:
      - patch
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-argo-workflows-workflow
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-argo-workflows-workflow
subjects:
  - kind: ServiceAccount
    name: argo-workflow
    namespace: default
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-argo-workflows-workflow
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
  namespace: workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-argo-workflows-workflow
subjects:
  - kind: ServiceAccount
    name: argo-workflow
    namespace: workflows
---
# Source: argo/charts/argo-workflows/templates/server/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argo-argo-workflows-server
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: "v3.5.5"
  annotations:
    cloud.google.com/backend-config: '{"default": "argo-workflows"}'
spec:
  ports:
  - port: 2746
    targetPort: 2746
  selector:
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
  sessionAffinity: None
  type: NodePort
---
# Source: argo/charts/argo-events/templates/argo-events-controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-argo-events-controller-manager
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-events-2.4.3
    app.kubernetes.io/name: argo-events-controller-manager
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-events
    app.kubernetes.io/version: "v1.9.1"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-events-controller-manager
      app.kubernetes.io/instance: argo
  revisionHistoryLimit: 5
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: b3cbec5072186e64dac5446ba0bf1727ab7241b341d184f5e489069076a489bf
      labels:
        helm.sh/chart: argo-events-2.4.3
        app.kubernetes.io/name: argo-events-controller-manager
        app.kubernetes.io/instance: argo
        app.kubernetes.io/component: controller-manager
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argo-events
        app.kubernetes.io/version: "v1.9.1"
    spec:
      containers:
      - name: controller-manager
        image: quay.io/argoproj/argo-events:v1.9.1
        imagePullPolicy: IfNotPresent
        args:
        - controller
        env:
        - name: ARGO_EVENTS_IMAGE
          value: quay.io/argoproj/argo-events:v1.9.1
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: config
          mountPath: /etc/argo-events
        ports:
        - name: metrics
          containerPort: 7777
          protocol: TCP
        - name: probe
          containerPort: 8081
          protocol: TCP
        livenessProbe:
          httpGet:
            port: probe
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            port: probe
            path: /readyz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      serviceAccountName: argo-argo-events-controller-manager
      volumes:
      - name: config
        configMap:
          name: argo-argo-events-controller-manager
---
# Source: argo/charts/argo-workflows/templates/controller/workflow-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-argo-workflows-workflow-controller
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: "v3.5.5"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows-workflow-controller
      app.kubernetes.io/instance: argo
  template:
    metadata:
      labels:
        helm.sh/chart: argo-workflows-0.40.14
        app.kubernetes.io/name: argo-workflows-workflow-controller
        app.kubernetes.io/instance: argo
        app.kubernetes.io/component: workflow-controller
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argo-workflows
        app.kubernetes.io/version: "v3.5.5"
    spec:
      serviceAccountName: argo-argo-workflows-workflow-controller
      containers:
        - name: controller
          image: "quay.io/argoproj/workflow-controller:v3.5.5"
          imagePullPolicy: Always
          command: [ "workflow-controller" ]
          args:
          - "--configmap"
          - "argo-argo-workflows-workflow-controller-configmap"
          - "--executor-image"
          - "quay.io/argoproj/argoexec:v3.5.5"
          - "--loglevel"
          - "info"
          - "--gloglevel"
          - "0"
          - "--log-format"
          - "text"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          env:
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: LEADER_ELECTION_DISABLE
              value: "true"
          resources:
            {}
          ports:
            - name: metrics
              containerPort: 9090
            - containerPort: 6060
          livenessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6060
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 30
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: argo/charts/argo-workflows/templates/server/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-argo-workflows-server
  namespace: "workflows"
  labels:
    helm.sh/chart: argo-workflows-0.40.14
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: argo
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: "v3.5.5"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows-server
      app.kubernetes.io/instance: argo
  template:
    metadata:
      labels:
        helm.sh/chart: argo-workflows-0.40.14
        app.kubernetes.io/name: argo-workflows-server
        app.kubernetes.io/instance: argo
        app.kubernetes.io/component: server
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argo-workflows
        app.kubernetes.io/version: "v3.5.5"
    spec:
      serviceAccountName: argo
      containers:
        - name: argo-server
          image: "quay.io/argoproj/argocli:v3.5.5"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          args:
          - server
          - --configmap=argo-argo-workflows-workflow-controller-configmap
          - --auth-mode=server
          - "--secure=false"
          - "--loglevel"
          - "info"
          - "--gloglevel"
          - "0"
          - "--log-format"
          - "text"
          ports:
          - name: web
            containerPort: 2746
          readinessProbe:
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: BASE_HREF
              value: "/"
          resources:
            {}
          volumeMounts:
          - name: tmp
            mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: argo/templates/argo.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argo-workflows
  annotations:
    kubernetes.io/ingress.global-static-ip-name: 
spec:
  defaultBackend:
    service:
      name: "argo-argo-workflows-server"
      port:
        number: 2746
